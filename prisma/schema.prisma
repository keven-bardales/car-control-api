// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Vehicle {
  id                     Int                      @id @default(autoincrement())
  make                   String
  model                  String
  year                   Int
  plate                  String
  vin                    String
  vehicelEntrances       VehiceEntrance[]
  vehicleExits           VehiceExit[]
  imageUrl               String?
  driverId               String
  isDeleted              Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  vehicleAssignedDrivers VehicleAssignedDrivers[]
  driver                 Driver                   @relation(fields: [driverId], references: [id])
}

model VehiceEntrance {
  id           Int      @id @default(autoincrement())
  vehicle      Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId    Int
  entranceDate DateTime
  fromLocation String
  toLocation   String
  notes        String?
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VehiceExit {
  id           Int      @id @default(autoincrement())
  vehicle      Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId    Int
  exitDate     DateTime
  toLocation   String
  fromLocation String
  notes        String?
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VehicleAssignedDrivers {
  id             Int       @id @default(autoincrement())
  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId      Int
  driver         Driver    @relation(fields: [driverId], references: [id])
  driverId       String
  dateAssigned   DateTime
  dateUnassigned DateTime?
  isDeleted      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Driver {
  id                     String                   @id @default(uuid())
  name                   String                   @unique
  dni                    String
  birthDate              DateTime
  isDeleted              Boolean                  @default(false)
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  vehicleAssignedDrivers VehicleAssignedDrivers[]
  vehicles               Vehicle[]
}
